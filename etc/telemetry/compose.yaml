services:
  prometheus:
    image: prom/prometheus:v3.1.0
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-otlp-receiver
    ports:
      - "9090:9090"

  tempo:
    image: grafana/tempo:2.7.2
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./config-tempo.yaml:/etc/tempo.yaml:z
    ports:
      - "3200:3200"
      - "5001:5001"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:12.0.1
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:z
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      - GF_LOG_LEVEL=error
    restart: unless-stopped

  collector:
    image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector:0.119.0
    command: ["--config=/otel-collector-config.yaml"]
    volumes:
      - './config-collector.yaml:/otel-collector-config.yaml:z'
    ports:
      - "4317:4317"
    depends_on: [tempo]

  # NOTE: Database part to avoid opening two more terminals for extra commands.
  # Doesn't need to be in the diagrams, it's just for convenience.
  migration:
    image: ghcr.io/trustification/trustd:latest
    command: "db --db-url=postgres://postgres:trustify@postgres:5432/trustify migrate"
    environment:
      - RUST_LOG=none
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: docker.io/library/postgres:17
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: "trustify"
      POSTGRES_DB: "trustify"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d trustify"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1GB"

