use sea_orm_migration::prelude::*;

#[derive(DeriveMigrationName)]
pub struct Migration;

#[async_trait::async_trait]
#[allow(deprecated)]
impl MigrationTrait for Migration {
    async fn up(&self, manager: &SchemaManager) -> Result<(), DbErr> {
        // Drop the old GiST index
        manager
            .drop_index(
                Index::drop()
                    .if_exists()
                    .name(Indexes::AdvisoryVulnerabilityVulnerabilityIdGist.to_string())
                    .table(AdvisoryVulnerability::Table)
                    .to_owned(),
            )
            .await?;

        // Create the new B-tree index
        manager
            .create_index(
                Index::create()
                    .if_not_exists()
                    .table(AdvisoryVulnerability::Table)
                    .name(Indexes::AdvisoryVulnerabilityVulnerabilityIdIdx.to_string())
                    .col(AdvisoryVulnerability::VulnerabilityId)
                    .to_owned(),
            )
            .await?;

        Ok(())
    }

    async fn down(&self, manager: &SchemaManager) -> Result<(), DbErr> {
        // Drop the new B-tree index
        manager
            .drop_index(
                Index::drop()
                    .if_exists()
                    .name(Indexes::AdvisoryVulnerabilityVulnerabilityIdIdx.to_string())
                    .table(AdvisoryVulnerability::Table)
                    .to_owned(),
            )
            .await?;

        // Recreate the GiST index
        manager
            .get_connection()
            .execute_unprepared(
                r#"
                CREATE INDEX IF NOT EXISTS advisory_vulnerability_vulnerability_id_gist
                ON advisory_vulnerability
                USING GIST (vulnerability_id gist_trgm_ops);
                "#,
            )
            .await
            .map(|_| ())?;

        Ok(())
    }
}

#[allow(clippy::enum_variant_names)]
#[derive(DeriveIden)]
pub enum Indexes {
    AdvisoryVulnerabilityVulnerabilityIdGist,
    AdvisoryVulnerabilityVulnerabilityIdIdx,
}

#[derive(DeriveIden)]
pub enum AdvisoryVulnerability {
    Table,
    VulnerabilityId,
}
